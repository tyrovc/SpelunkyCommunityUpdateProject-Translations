<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="DRAW" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if (instance_exists(oPlayer1))
{
    if (oPlayer1.dead or isRoom("rMoon"))
    {
        if (isLevel())
        {
            if (drawStatus &gt; 0)
            {
                draw_set_font(global.myFont);
                draw_set_color(c_yellow);
                //draw_t3xt(view_xview[0]+88, view_yview[0]+32+16, global.mGameover/*"GAME OVER"*/);
                scrDrawText(88,32+16, 2, false, global.mGameover);
            }
            if (drawStatus &gt; 1)
            {
                draw_set_font(global.myFontSmall);
                draw_set_color(c_yellow);
                //draw_t3xt(view_xview[0]+88, view_yview[0]+64+16, global.mFinalscore/*"FINAL SCORE:"*/);
                scrDrawText(88,64+16, 2, false, global.mFinalscore);
            }
            if (drawStatus &gt; 2)
            {
                draw_set_font(global.myFont);
                draw_set_color(c_white);
                //draw_t3xt(view_xview[0]+88, view_yview[0]+72+16, "$" + string(moneyCount));
                scrDrawText(88,72+24, 2, false, "$" + string(moneyCount));
                draw_set_font(global.myFontSmall);
                draw_set_color(c_yellow);
                if (global.customLevel)
                {
                    if (global.testLevel != "")
                    {
                        if (global.gamepadOn) str = global.mPress + " " + scrGetJoy(global.joyAttackVal) + " " + global.mToeditlevel;//" TO EDIT LEVEL.";
                        else str = global.mPress + " "  + scrGetKey(global.keyAttackVal) + " " + global.mToeditlevel;
                    }
                    else
                    {
                        if (global.gamepadOn) str = global.mPress + " "  + scrGetJoy(global.joyAttackVal) + " " + global.mToloadanotherlevel;//" TO LOAD ANOTHER LEVEL.";
                        else str = global.mPress + " "  + scrGetKey(global.keyAttackVal) + " " + global.mToloadanotherlevel;
                    }
                    //strLen = string_length(str)*8;
                    //n = 320 - strLen;
                    //n = ceil(n / 2);
                    //draw_t3xt(view_xview[0]+n, view_yview[0]+120, str);
                    scrDrawText(0,120, 2, true, str);
                }
                else
                {
                    if (global.gamepadOn) str = global.mPress + " "  + scrGetJoy(global.joyAttackVal) + " " + global.mForhighscores;//"FOR HIGH SCORES.";
                    else str = global.mPress + " "  + scrGetKey(global.keyAttackVal) + " " + global.mForhighscores;
                    //strLen = string_length(str)*8;
                    //n = 320 - strLen;
                    //n = ceil(n / 2);
                    //draw_t3xt(view_xview[0]+n, view_yview[0]+120, str);
                    scrDrawText(0,120, 2, true, str);
                }
            }
        }
        else if (isRoom("rSun"))
        {
            if (drawStatus &gt; 0)
            {
                draw_set_font(global.myFont);
                draw_set_color(c_yellow);
                //draw_t3xt(view_xview[0]+88, view_yview[0]+32+16, global.mMinifinished/*"FINISHED!"*/);
                scrDrawText(88, 32+16, 2, false, global.mMinifinished);
            }
            if (drawStatus &gt; 1)
            {
                draw_set_font(global.myFontSmall);
                draw_set_color(c_yellow);
                if (oSunRoom.highscore) str = global.mNewrecord;//"YOU SET A NEW RECORD!";
                else str = global.mBetterlucknexttime;//"BETTER LUCK NEXT TIME...";
                //strLen = string_length(str)*8;
                //n = 320 - strLen;
                //n = ceil(n / 2);
                //draw_t3xt(n, view_yview[0]+64+16, str);
                scrDrawText(0, 64+16, 2, true, str);
            }
        }
        else if (isRoom("rMoon"))
        {
            if (oMoonRoom.timer &lt; 0)
            {
                if (drawStatus &gt; 0)
                {
                    draw_set_font(global.myFont);
                    draw_set_color(c_yellow);
                    //draw_t3xt(view_xview[0]+88, view_yview[0]+32+16, global.mMinifinished/*"FINISHED!"*/);
                    scrDrawText(88, 32+16, 2, false, global.mMinifinished);
                }
                if (drawStatus &gt; 1)
                {
                    draw_set_font(global.myFontSmall);
                    draw_set_color(c_yellow);
                    if (oMoonRoom.highscore) str = global.mNewrecord;
                    else str = global.mBetterlucknexttime;
                    //strLen = string_length(str)*8;
                    //n = 320 - strLen;
                    //n = ceil(n / 2);
                    //draw_t3xt(n, view_yview[0]+64+16, str);
                    scrDrawText(0, 64+16, 2, true, str);
                }
            }
        }
        else if (isRoom("rStars"))
        {
            if (drawStatus &gt; 0)
            {
                draw_set_font(global.myFont);
                draw_set_color(c_yellow);
                //draw_t3xt(view_xview[0]+88, view_yview[0]+32+16, global.mMinifinished/*"FINISHED!"*/);
                scrDrawText(88, 32+16, 2, false, global.mMinifinished);
            }
            if (drawStatus &gt; 1)
            {
                draw_set_font(global.myFontSmall);
                draw_set_color(c_yellow);
                if (oStarsRoom.highscore) str = global.mNewrecord;
                else str = global.mBetterlucknexttime;
                //strLen = string_length(str)*8;
                //n = 320 - strLen;
                //n = ceil(n / 2);
                //draw_t3xt(n, view_yview[0]+64+16, str);
                scrDrawText(0, 64+16, 2, true, str);
            }
        }
    }
}
</argument>
      </arguments>
    </action>
    <action id="524" library="1">
      <!--action name: Set_Color-->
      <kind>NORMAL</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>false</canApplyTo>
      <actionType>FUNCTION</actionType>
      <functionName>action_color</functionName>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="COLOR">16777215</argument>
      </arguments>
    </action>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">// DEBUGGING TEXT

// Display level path
if (false and room == rLevel)
{
    for (j = 0; j &lt; 4; j += 1)
    {
        for (i = 0; i &lt; 4; i += 1)
        {
            draw_text(oPlayer1.x+48+i*16, oPlayer1.y-64+16+j*16, string(global.roomPath[i,j]));
        }
    }
}

if (false and instance_exists(oPlayer1))
{
    file = file_text_open_read("stats.txt");

    if (file)
    {
    file_text_readln(file);
    file_text_readln(file);
    file_text_readln(file);
    file_text_readln(file);
    str = file_text_read_string(file);
    str = string_delete(str, 1, 20);
    global.totalCrates = real(str);
    file_text_readln(file);
    str = file_text_read_string(file);
    // str = string_delete(str, 1, 20);
    // global.totalChests = real(str);
        
    draw_text(oPlayer1.x+16, oPlayer1.y-16, str);
        
    file_text_close(file);
    }
}

if (false and instance_exists(oPlayer1))
{
    draw_set_font(global.myFontSmall);
    draw_set_color(c_white);
    draw_text(oPlayer1.x+16, oPlayer1.y-16, string(oPlayer1.stunTimer));
    // if (instance_exists(oLockedChest)) { with oPlayer1 { draw_text(x+16, y-32, distance_to_object(oLockedChest)); } }
    // else { draw_text(oPlayer1.x+16, oPlayer1.y-16, "0"); }
    //if (global.madeMoai == true) draw_text(oPlayer1.x+16, oPlayer1.y-16, "TRUE");
    //else draw_text(oPlayer1.x+16, oPlayer1.y-16, "FALSE");
    //draw_text(oPlayer1.x+16, oPlayer1.y-16, string_upper(global.pickupItem));
}
</argument>
      </arguments>
    </action>
    <action id="524" library="1">
      <!--action name: Set_Color-->
      <kind>NORMAL</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>false</canApplyTo>
      <actionType>FUNCTION</actionType>
      <functionName>action_color</functionName>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="COLOR">65535</argument>
      </arguments>
    </action>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">// draw_text(oPlayer1.x-24, oPlayer1.y-48, string(radtodeg(arctan(1))));

// DEBUG

//if (false and room == rLevel and instance_exists(oXMarket))
//{
//draw_text(oPlayer1.x-24, oPlayer1.y-48, string(oPlayer1.x-oXMarket.x));
//draw_text(oPlayer1.x, oPlayer1.y-48, string(oPlayer1.y-oXMarket.y));
//}
</argument>
      </arguments>
    </action>
  </actions>
</event>
