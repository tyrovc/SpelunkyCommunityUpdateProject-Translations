<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="1">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if (not surface_exists(pSurf)) pSurf = surface_create(screen_w, screen_h);
if (not surface_exists(screen)) screen = surface_create(screen_w, screen_h);
if (not surface_exists(darkSurf)) darkSurf = surface_create(screen_w, screen_h);

if (checkBombPressed())
{
    if (paused and global.plife &gt; 0 and isLevel())
    {
        instance_activate_all();
        paused = false;
        with oPlayer1
        {
            if (facing == 18) xVel = -3;
            else xVel = 3;
            yVel = -6;
            global.plife = -99;
        }
    
        if (SS_IsSoundPlaying(global.musTitle)) SS_SetSoundVol(global.musTitle, 2000 + 8000 * (global.musicVol/18));
        if (SS_IsSoundPlaying(global.musCave)) SS_SetSoundVol(global.musCave, 2000 + 8000 * (global.musicVol/18));
        if (SS_IsSoundPlaying(global.musLush)) SS_SetSoundVol(global.musLush, 2000 + 8000 * (global.musicVol/18));
        if (SS_IsSoundPlaying(global.musIce)) SS_SetSoundVol(global.musIce, 2000 + 8000 * (global.musicVol/18));
        if (SS_IsSoundPlaying(global.musTemple)) SS_SetSoundVol(global.musTemple, 2000 + 8000 * (global.musicVol/18));
        if (SS_IsSoundPlaying(global.musBoss)) SS_SetSoundVol(global.musBoss, 2000 + 8000 * (global.musicVol/18));
        
        if (not global.hasAnkh) stopAllMusic();
    }
}
else if (checkRopePressed())
{
    if (paused)
        game_end();
}
else if (checkStartPressed())
{
    if (not paused and canPause)
    {
        if (instance_exists(oPlayer1))
        {
            if (not oPlayer1.dead)
            {
                surface_set_target(pSurf);
                screen_redraw();
                if (global.darkLevel) draw_set_alpha(1);
                else draw_set_alpha(0.9);
                draw_set_color(c_black);
                draw_rectangle(0, 0, screen_w*screen_scale, screen_h*screen_scale, false);
                draw_set_alpha(1);
                if (SS_IsSoundPlaying(global.musTitle)) SS_SetSoundVol(global.musTitle, 0);
                if (SS_IsSoundPlaying(global.musCave)) SS_SetSoundVol(global.musCave, 0);
                if (SS_IsSoundPlaying(global.musLush)) SS_SetSoundVol(global.musLush, 0);
                if (SS_IsSoundPlaying(global.musIce)) SS_SetSoundVol(global.musIce, 0);
                if (SS_IsSoundPlaying(global.musTemple)) SS_SetSoundVol(global.musTemple, 0);
                if (SS_IsSoundPlaying(global.musBoss)) SS_SetSoundVol(global.musBoss, 0);
                py = oPlayer1.y;
                instance_deactivate_all(true);
                instance_activate_object(oGamepad);
                paused = true;
            }
        }
    }
    else
    {
        instance_activate_all();
        if (SS_IsSoundPlaying(global.musTitle)) SS_SetSoundVol(global.musTitle, 2000 + 8000 * (global.musicVol/18));
        if (SS_IsSoundPlaying(global.musCave)) SS_SetSoundVol(global.musCave, 2000 + 8000 * (global.musicVol/18));
        if (SS_IsSoundPlaying(global.musLush)) SS_SetSoundVol(global.musLush, 2000 + 8000 * (global.musicVol/18));
        if (SS_IsSoundPlaying(global.musIce)) SS_SetSoundVol(global.musIce, 2000 + 8000 * (global.musicVol/18));
        if (SS_IsSoundPlaying(global.musTemple)) SS_SetSoundVol(global.musTemple, 2000 + 8000 * (global.musicVol/18));
        if (SS_IsSoundPlaying(global.musBoss)) SS_SetSoundVol(global.musBoss, 2000 + 8000 * (global.musicVol/18));
        paused = false;
    }
}

// this draws the surface on the screen
surface_reset_target();
draw_clear(0);
if (paused)
{
    surface_set_target(pSurf);
    draw_set_font(global.myFont);
    draw_set_color(c_white);
    //draw_t3xt(112, 200, "PAUSED");
    scrDrawText(112, 200, 2, false, global.mPaused, true);
    draw_set_font(global.myFontSmall);
    if (isLevel())
    {
        n = 128-24;
        if (global.currLevel &lt; 1) scrDrawText(40, n-24, 2, false, "TUTORIAL CAVE", true);//draw_t3xt(40, n-24, "TUTORIAL CAVE");
        else if (isRoom("rLoadLevel")) scrDrawText(40, n-24, 2, false, global.mLevel+ ": " + global.customLevelName + " BY " + global.customLevelAuthor, true);//draw_text(40, n-24, /*"LEVEL: "*/global.mLevel+ ": " + global.customLevelName + " BY " + global.customLevelAuthor);
        else scrDrawText(40, n-28, 2, false, global.mLevel+ ": " + string(global.currLevel), true);//draw_t3xt(40, n-24, /*"LEVEL: "*/global.mLevel+ ": " + string(global.currLevel));
        scrDrawText(40, n-16, 2, false, global.mDepth+ " " + string(174.8*(global.currLevel-1)+(py+8)*0.34) + " " + global.mDepthunit, true);//draw_text(40, n-16, global.mDepth/*"DEPTH: "*/ + " " + string(174.8*(global.currLevel-1)+(py+8)*0.34) + " " + global.mDepthunit); //" FEET"
        scrDrawText(40, n+4, 2, false, global.mMoney + string(global.money), true); //draw_t3xt(40, n, global.mMoney/*"MONEY: "*/ + string(global.money));
        scrDrawText(40, n+16, 2, false, global.mKills + string(global.kills), true);//draw_t3xt(40, n+8, global.mKills/*"KILLS: "*/ + string(global.kills));
        s = global.xtime;
        s = floor(s / 1000);
        m = 0;
        while (s &gt; 59)
        {
            s -= 60;
            m += 1;
        }
        if (s &lt; 10) str = "0" + string(s);
        else str = string(s);
        s2 = global.time;
        s2 = floor(s2 / 1000);
        m2 = 0;
        while (s2 &gt; 59)
        {
            s2 -= 60;
            m2 += 1;
        }
        if (s2 &lt; 10) str2 = "0" + string(s2);
        else str2 = string(s2);
        scrDrawText(40, n+28, 2, false, global.mTime + string(m) + ":" + str + " / " + string(m2) + ":" + str2, true);//draw_t3xt(40, n+16, global.mTime/*"TIME:  "*/ + string(m) + ":" + str + " / " + string(m2) + ":" + str2);
        scrDrawText(40, n+40, 2, false, global.mSaves + string(global.damsels), true);//draw_t3xt(40, n+24, global.mSaves/*"SAVES: "*/ + string(global.damsels));
        if (global.gamepadOn) scrDrawText(24, 216, 2, false, global.mPausebuttons, true);//draw_t3xt(24, 216, global.mPausebuttons);//"START-RETURN  BOMB-DIE  ROPE-QUIT"
        else scrDrawText(40, 216, 2, false, global.mPausebuttons2, true);//draw_t3xt(40, 216, global.mPausebuttons2); //"ESC-RETURN  F1-DIE  F10-QUIT"
    }
    else
    {
        if (global.gamepadOn) scrDrawText(64, 216, 2, false, global.mPausebuttonsnodeath, true);//draw_t3xt(64, 216, global.mPausebuttonsnodeath); //"START-RETURN  ROPE-QUIT"
        else scrDrawText(80, 216, 2, false, global.mPausebuttonsnodeath2, true);//draw_t3xt(80, 216, global.mPausebuttonsnodeath2); //"ESC-RETURN  F10-QUIT"
    }
    surface_reset_target();
    draw_surface_stretched(pSurf,screen_x,screen_y,screen_w*screen_scale,screen_h*screen_scale);
}
else
{
    if (isRoom("rTitle"))
    {
        surface_set_target(screen);
        draw_set_alpha(oTitle.darkness);
        draw_set_color(c_black);
        if (oTitle.darkness &gt; 0) draw_rectangle(0, 0, screen_w, screen_h, false);
        if (oTitle.state == 1)
        {
            draw_set_font(global.myFontSmall);
            draw_set_color(c_white);
            scrDrawText(88, 48, 2, false, "DEREK YU "+global.derekyupresents, true);//"DEREK YU PRESENTS
        }
        draw_set_alpha(1);
        draw_set_blend_mode_ext(bm_src_color,bm_one);
        draw_set_color(c_black);
        draw_rectangle(0, 0, screen_w,screen_h, 0);
        draw_set_blend_mode(bm_normal);
        surface_reset_target();
    }
    else if (isLevel() and instance_exists(oPlayer1))
    {
        if (global.darkLevel and not oPlayer1.dead)
        {
            surface_set_target(darkSurf);
            draw_set_color(c_black);
            draw_rectangle(0, 0, screen_w, screen_h, false);
            draw_set_color(make_color_rgb(255-255*oLevel.darkness,255-255*oLevel.darkness,255));
            if (instance_exists(oLampRed))
            {
                with oPlayer1
                {
                    distToLamp = distance_to_object(oLampRed);
                    if (distToLamp &lt;= 96)
                    {
                        draw_set_color(make_color_rgb(255-distToLamp,120-(96-distToLamp),120-(96-distToLamp)));
                    }
                }
            }
            if (instance_exists(oLampRedItem))
            {
                with oPlayer1
                {
                    distToLamp = distance_to_object(oLampRedItem);
                    if (distToLamp &lt;= 96)
                    {
                        draw_set_color(make_color_rgb(255-distToLamp,120-(96-distToLamp),120-(96-distToLamp)));
                    }
                }
            }
            draw_circle(oPlayer1.x-view_xview[0], oPlayer1.y-view_yview[0], 96-64*oLevel.darkness, false);
            with oFlare
            {
                draw_circle(x-view_xview[0], y-view_yview[0], 96, false);
            }
            with oFlareCrate
            {
                draw_circle(x-view_xview[0], y-view_yview[0], 96, false);
            }
            with oLamp
            {
                draw_circle((x+8)-view_xview[0], (y+8)-view_yview[0], 96, false);
            }
            with oLampItem
            {
                draw_circle(x-view_xview[0], (y-4)-view_yview[0], 96, false);
            }
            with oArrowTrapLeftLit
            {
                draw_circle((x+8)-view_xview[0], (y+8)-view_yview[0], 32, false);
            }
            with oArrowTrapRightLit
            {
                draw_circle((x+8)-view_xview[0], (y+8)-view_yview[0], 32, false);
            }
            with oTikiTorch
            {
                draw_circle((x+8)-view_xview[0], (y+8)-view_yview[0], 32, false);
            }
            with oFireFrog
            {
                draw_circle((x+8)-view_xview[0], (y+8)-view_yview[0], 32, false);
            }
            with oSpearTrapLit
            {
                draw_circle((x+8)-view_xview[0], (y+8)-view_yview[0], 32, false);
            }
            with oSmashTrapLit
            {
                draw_circle((x+8)-view_xview[0], (y+8)-view_yview[0], 32, false);
            }
            with oExplosion
            {
                draw_circle(x-view_xview[0], y-view_yview[0], 96, false);
            }
            with oLava
            {
                draw_circle((x+8)-view_xview[0], (y+8)-view_yview[0], 32, false);
            }
            with oScarab
            {
                draw_circle((x+8)-view_xview[0], (y+8)-view_yview[0], 16, false);
            }
            with oGhost
            {
                draw_circle((x+16)-view_xview[0], (y+16)-view_yview[0], 64, false);
            }
            surface_set_target(screen);
            draw_set_blend_mode_ext(bm_dest_color, bm_zero);
            draw_set_alpha(1);
            draw_surface(darkSurf, 0, 0);
            draw_set_blend_mode(bm_normal);
        }
        surface_set_target(screen);
        scrDrawHUD();
        if(!isLevel()){ //Draw messages for title screen and minigames
            if (global.messageTimer &gt; 0)
            {
                if(global.imagefont){//Space out things a bit more for some character sets
                    n=0;
                }
                else{
                    n=6;
                }
                scrDrawText(0, 216-n, 2, true, string(global.message));//draw_t3xt(n, 216, string(global.message));
                scrDrawText(0, 224, 2, true, string(global.message2)); //draw_t3xt(n, 224, string(global.message2));
        
                global.messageTimer -= 1;
            }
        }
        draw_set_blend_mode_ext(bm_src_color,bm_one);
        draw_set_color(c_black);
        draw_rectangle(0, 0, screen_w,screen_h, 0);
        draw_set_blend_mode(bm_normal);
        surface_reset_target();
    }
    draw_set_blend_mode_ext(bm_one, bm_zero); // According to ChevyRay, this should fix the black box glitch
    draw_surface_stretched(screen,screen_x,screen_y,screen_w*screen_scale,screen_h*screen_scale);
    draw_set_blend_mode(bm_normal); // According to ChevyRay, this should fix the black box glitch
}
screen_refresh();
</argument>
      </arguments>
    </action>
  </actions>
</event>
