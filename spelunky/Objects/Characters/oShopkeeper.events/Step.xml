<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="0">
  <actions>
    <action id="604" library="1">
      <!--action name: Inherited-->
      <kind>NORMAL</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>false</canApplyTo>
      <actionType>FUNCTION</actionType>
      <functionName>action_inherited</functionName>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments/>
    </action>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if ((x &gt; view_xview[0]-20 and x &lt; view_xview[0]+view_wview[0]+4 and
     y &gt; view_yview[0]-20 and y &lt; view_yview[0]+view_hview[0]+4))
{
moveTo(xVel,yVel);

if (not held) yVel += myGrav;
if (yVel &gt; 8) yVel = 8;

colLeft = false;
colRight = false;
colBot = false;
colTop = false;
if (isCollisionLeft(1)) colLeft = true;
if (isCollisionRight(1)) colRight = true;
if (isCollisionBottom(1)) colBot = true;
if (isCollisionTop(1)) colTop = true;

if (colBot and status != STUNNED) yVel = 0;

if (throwCount &gt; 0) throwCount -= 1;

// crushed
if (status &gt;= STUNNED)
{
    if (collision_point(x+8, y+12, oSolid, 0, 0))
    {
        scrCreateBlood(x+8, y+8, 3);
        playSound(global.sndCavemanDie);
        if (hp &gt; 0)
        {
            if (isRealLevel()) global.enemyKills[19] += 1;
            global.shopkeepers += 1;
            global.kills += 1;
        }
        global.murderer = true;
        instance_destroy();
    }
}
else if (not held and collision_point(x+8, y+8, oSolid, 0, 0))
{
    scrCreateBlood(x+8, y+8, 3);
    playSound(global.sndCavemanDie);
    if (hp &gt; 0)
    {
        if (isRealLevel()) global.enemyKills[19] += 1;
        global.shopkeepers += 1;
        global.kills += 1;
    }
    global.murderer = true;
    if (hasGun)
    {
        obj = instance_create(x+8, y+8, oShotgun);
        obj.yVel = rand(4,6);
        if (xVel &lt; 0) obj.xVel = -1 * rand(4,6);
        else obj.xVel = rand(4,6);
        obj.cost = 0;
        obj.forSale = false;
        hasGun = false;
    }
    instance_destroy();
}

if (status != DEAD and status != STUNNED and hp &lt; 1)
{
    status = DEAD;
}

dist = distance_to_object(oPlayer1);    

if (status == IDLE or status == FOLLOW)
{
    if (oPlayer1.holdItem &gt; 0)
    {
        item = oPlayer1.holdItem;
        if (item.cost &gt; 0)
        {
            global.message = item.buyMessage;
            if (global.gamepadOn) global.message2 = global.mPress+" "+/*"PRESS "*/ scrGetJoy(global.joyPayVal) + " " + global.mTopurchase;//" TO PURCHASE.";
            else global.message2 = global.mPress+" "+ scrGetKey(global.keyPayVal) + " " + global.mTopurchase;
            global.messageTimer = 200;
        }
    }
}

if ((status == PATROL or status == WALK))
{
    if (not oPlayer1.dead and distance_to_object(oPlayer1) &lt; 64 and oPlayer1.y - (y+8) &lt; 16)
    {
        status = ATTACK;
    }
    else if (abs(oPlayer1.x-(x+8)) &lt; 4)
    {
        status = ATTACK;
    }
}

if (status == IDLE)
{
    bounced = false;
    
    if (colLeft)
    {
        x += 1;
    }
    if (colRight)
    {
        x -= 1;
    }
    if (colLeft and colRight) status = ATTACK;
    
    if (oPlayer1.x &lt; x+8) facing = LEFT;
    else facing = RIGHT;
    
    if (yVel &lt; 0 and colTop)
    {
        yVel = 0;
    }
    
    if (global.murderer or global.thiefLevel &gt; 0)
    {
        status = PATROL;
    }
    else if (not welcomed and (scrGetRoomX(oPlayer1.x) == scrGetRoomX(x) and scrGetRoomY(oPlayer1.y) == scrGetRoomY(y)))
    {
        if (style == "Bomb") global.message = global.mWelcometo/*"WELCOME TO "*/ + " " + scrGetName() + "'S "+global.mBombshop;//"BOMB SHOP!";
        else if (style == "Weapon") global.message = global.mWelcometo + " " + scrGetName() + "'S "+global.mArmory;//ARMORY!";
        else if (style == "Clothing") global.message = global.mWelcometo + " " + scrGetName() + "'S "+global.mClothingshop;//CLOTHING SHOP!";
        else if (style == "Rare") global.message = global.mWelcometo + " " + scrGetName() + "'S "+global.mSpecialityshop;//SPECIALTY SHOP!";
        else if (style == "Craps") global.message = global.mWelcometo + " " + scrGetName() + "'S "+global.mDicehouse;//DICE HOUSE!";
        else if (style == "Kissing") global.message = global.mWelcometo + " " + scrGetName() + "'S "+global.mKissingparlor;//KISSING PARLOR!";
        else if (style == "Ankh") global.message = global.mIhavesomethingspecial;//"I HAVE SOMETHING SPECIAL...";
        else global.message = global.mWelcometo + scrGetName() + "'S "+global.mSupplyshop;//"SUPPLY SHOP!";
        if (style == "Craps")
        {
            if (global.gamepadOn) global.message2 = global.mPress+" "+ scrGetJoy(global.joyPayVal) + " " + global.mTobet + string(betValue) + ".";
            else global.message2 = global.mPress+" "+ scrGetKey(global.keyPayVal) + " " + global.mTobet + string(betValue) + ".";
        }
        else if (style == "Kissing")
        {
            if (global.gamepadOn) global.message2 = "$" + string(getKissValue()) + " " + global.mKisspress/*"A KISS. PRESS"*/ + " " + scrGetJoy(global.joyPayVal) + ".";
            else global.message2 = "$" + string(getKissValue()) + " " + global.mKisspress + " " + scrGetKey(global.keyPayVal) + ".";
        }
        else global.message2 = "";
        global.messageTimer = 200;
        welcomed = true;
    }
    
    ///////////////
    // CRAPS
    ///////////////
    
    if (style == "Craps")
    {
        global.diceRolled = true;
        global.diceValue = 0;
        if (instance_number(oDice) == 2 and oPlayer1.bet &gt; 0)
        {
            with oDice
            {
                if (not rolled) global.diceRolled = false;
                global.diceValue += value;
            }
        }
        else
        {
            global.diceRolled = false;
        }
        
        if (global.diceRolled)
        {
            if (global.diceValue == 7)
            {
                if (isRealLevel()) global.diceGamesWon += 1;
                global.message = global.mRolledseven;//"YOU ROLLED A SEVEN!";
                global.message2 = global.mWonprize;//"YOU WIN A PRIZE!";
                global.messageTimer = 200;
                oPlayer1.bet = 0;
                with oItem
                {
                    if (inDiceHouse)
                    {
                        obj = instance_create(x-4, y+6, oPoof);
                        obj.xVel = -0.4;
                        obj = instance_create(x+4, y+6, oPoof);
                        obj.xVel = 0.4;
                        scrGenerateItem(x, y, 1);
                        obj.inDiceHouse = true;
                        if (oPlayer1.x &lt; x) x -= 32;
                        else x += 32;
                        obj = instance_create(x-4, y+6, oPoof);
                        obj.xVel = -0.4;
                        obj = instance_create(x+4, y+6, oPoof);
                        obj.xVel = 0.4;
                        cost = 0;
                        forSale = false;
                        inDiceHouse = false;
                    }
                }
            }
            else if (global.diceValue &gt; 7)
            {
                if (isRealLevel()) global.diceGamesWon += 1;
                global.message = global.mYourolleda+" "+ string(global.diceValue) + "!";
                global.message2 = global.mDicewon;//"CONGRATULATIONS! YOU WIN!";
                global.messageTimer = 200;
                global.collect += oPlayer1.bet * 2;
                global.collectCounter += 20;
                if (global.collectCounter &gt; 100) global.collectCounter = 100;
                oPlayer1.bet = 0;
            }
            else if (global.diceValue &lt; 7)
            {
                if (isRealLevel()) global.diceGamesLost += 1;
                global.message = global.mYourolleda+" "+ string(global.diceValue) + "!";
                global.message2 = global.mDicelost;//"I'M SORRY, BUT YOU LOSE!";
                global.messageTimer = 200;
                oPlayer1.bet = 0;
            }
            global.diceRolled = false;
            with oDice { rolled = false; }
        }
    }
    else if (oPlayer1.holdItem &gt; 0)
    {
        obj = oPlayer1.holdItem;
        if (obj.cost &gt; 0)
        {
            if (scrGetRoomX(oPlayer1.x) == scrGetRoomX(x) and scrGetRoomY(oPlayer1.y) == scrGetRoomY(y))
            {
                status = FOLLOW;
            }
        }
    }
}
else if (status == FOLLOW)
{
    image_speed = 0.5;
    
    if (isCollisionLeft(1) or isCollisionRight(1))
    {
        if (facing == LEFT) facing = RIGHT;
        else facing = LEFT;
    }
    
    if (turnTimer &gt; 0) turnTimer -= 1;
    else if (abs(oPlayer1.y - (y+8)) &lt; 8 and isCollisionBottom(1) and dist &gt; 16)
    {
        if (oPlayer1.x &lt; x) facing = LEFT;
        else facing = RIGHT;
        turnTimer = 10;
    }
    
    i = dist/16 * 1.5;
    if (facing == LEFT)
    {
        xVel = -i;
    }
    else
    {
        xVel = i;
    }

    if (xVel &lt; -3) xVel = -3;
    if (xVel &gt; 3) xVel = 3;
    
    if (dist &lt; 12 or oPlayer1.y &lt; y) xVel = 0;
    
    if (oPlayer1.holdItem != 0)
    {
        obj = oPlayer1.holdItem;
        if (obj == 0 or obj.cost == 0)
        {
            status = IDLE;
        }
    }
    else
    {
        status = IDLE;
    }
}
else if (status == PATROL)
{
    bounced = false;
    
    if (yVel &lt; 0 and isCollisionTop(1))
    {
        yVel = 0;
    }

    if (colBot and counter &gt; 0) counter -= 1;    
    if (counter &lt; 1)
    {
        facing = rand(0,1);
        status = WALK;
    }
}
else if (status == WALK)
{
    image_speed = 0.5;

    if (isCollisionLeft(1) or isCollisionRight(1))
    {
        if (facing == LEFT) facing = RIGHT;
        else facing = LEFT;
    }
    
    if (facing == LEFT)
    {
        if (not collision_point(x-1, y, oSolid, -1, -1))
        {
            status = PATROL;
            counter = rand(20,50);
            xVel = 0;
        }
        xVel = -1.5;
    }
    else
    {
        if (not collision_point(x+16, y, oSolid, -1, -1))
        {
            status = PATROL;
            counter = rand(20,50);
            xVel = 0;
        }
        xVel = 1.5;
    }
    
    if (rand(1,100) == 1)
    {
        status = PATROL;
        counter = rand(20,50);
        xVel = 0;
    }
}
else if (status == ATTACK)
{
    image_speed = 1;
    
    if (not angered)
    {
        with oItem
        {
            cost = 0;
            forSale = false;
        }
        angered = true;
    }
    
    if (turnTimer &gt; 0) turnTimer -= 1;
    else if (abs(oPlayer1.y - (y+8)) &lt; 8 and isCollisionBottom(1) and dist &gt; 16)
    {
        if (oPlayer1.x &lt; x) facing = LEFT;
        else facing = RIGHT;
        turnTimer = 20;
    }
    
    if (isCollisionLeft(1) or isCollisionRight(1))
    {
        if (facing == LEFT) facing = RIGHT;
        else facing = LEFT;
    }
    
    if (facing == LEFT) xVel = -3;
    else xVel = 3;
    
    if (hasGun)
    {
        if (firing &gt; 0) firing -= 1;
        else if (abs(oPlayer1.y - (y+8)) &lt; 32)
        {
            if (facing == LEFT and oPlayer1.x &lt; x+8 and dist &lt; 96)
            {
                instance_create(x, y+9, oShotgunBlastLeft);
                for (i = 0; i &lt; 6; i+= 1)
                {
                    obj = instance_create(x+4, y+8, oBullet);
                    obj.xVel = (-1 * rand(6,8)) + xVel;
                    if (obj.xVel &gt;= -6) obj.xVel = -6;
                    obj.yVel = random(1) - random(1);
                    obj.safe = true;
                    with obj { if (collision_point(x, y, oSolid, 0, 0)) instance_destroy(); }
                }
                yVel -= 1;
                xVel += 3;
                playSound(global.sndShotgun);
                firing = firingMax;
            }
            if (facing == RIGHT and oPlayer1.x &gt; x+8 and dist &lt; 96)
            {
                instance_create(x+16, y+9, oShotgunBlastRight);
                for (i = 0; i &lt; 6; i+= 1)
                {
                    obj = instance_create(x+12, y+8, oBullet);
                    obj.xVel = rand(6,8) + xVel;
                    if (obj.xVel &lt; 6) obj.xVel = 6;
                    obj.yVel = random(1) - random(1);
                    obj.safe = true;
                    with obj { if (collision_point(x, y, oSolid, 0, 0)) instance_destroy(); }
                }
                yVel -= 1;
                xVel -= 3;
                playSound(global.sndShotgun);
                firing = firingMax;
            }
        }
    }
    
    // jump
    if (oPlayer1.y &gt; y and abs(oPlayer1.x - (x+8)) &lt; 64)
    {
        // do nothing
    }
    else if ((facing == LEFT and collision_point(x-16, y, oSolid, -1, -1)) or
        (facing == RIGHT and collision_point(x+32, y, oSolid, -1, -1)))
    {
        if (colBot and not isCollisionTop(4)) yVel = -1 * rand(7,8);
        /*
        else
        {
            if (facing == LEFT) xVel = -1.5;
            else xVel = 1.5;
        }
        */
    }
    else if (oPlayer1.y &lt;= y+16 and 
             ((facing == LEFT and not collision_point(x-16, y+16, oSolid, -1, -1)) or
             (facing == RIGHT and not collision_point(x+32, y+16, oSolid, -1, -1))))
    {
        if (colBot and not isCollisionTop(4)) yVel = -1 * rand(7,8);
    }
    
    if (not colBot and oPlayer1.y &gt; y+8)
    {
        if (facing == LEFT) xVel = -1.5;
        else xVel = 1.5;
    }
    
    if (oPlayer1.dead)
    {
        status = WALK;
    }
}
else if (status == STUNNED)
{
        if (colBot) sprite_index = sShopStunL;
        else if (bounced)
        {
            if (yVel &lt; 0) sprite_index = sShopBounceL;
            else sprite_index = sShopFallL;
        }
        else
        {
            if (xVel &lt; 0) sprite_index = sShopDieLL;
            else sprite_index = sShopDieLR;
        }
    
    if (colBot and not bounced)
    {
        bounced = true;
        scrCreateBlood(x+8, y+8, 3);
    }
    
    if (held or colBot)
    {      
        if (counter &gt; 0) counter -= 1;
        else if (hp &gt; 0)
        {
            status = ATTACK;
            if (held)
            {
                held = false;
                with oPlayer1 { holdItem = 0; pickupItemType = ""; }
            }
        }
    }
}
else if (status == DEAD)
{
    if (not dead)
    {
        if (isRoom("rStars"))
        {
            if (oStarsRoom.kills &lt; 99) oStarsRoom.kills += 1;
        }
        else
        {
            if (isRealLevel()) global.enemyKills[19] += 1;
            global.shopkeepers += 1;
            global.kills += 1;
            global.murderer = true;
            repeat(rand(1,4))
            {
                obj = instance_create(x+8, y+8, oGoldNugget);
                obj.yVel = -1;
                obj.xVel = rand(1,3)-rand(1,3);
            }
        }
        playSound(global.sndCavemanDie);
        
        dead = true;
    }

    sprite_index = sShopDieL;

    
    if (abs(xVel) &gt; 0 or abs(yVel) &gt; 0) status = STUNNED;
}

if (status &gt;= STUNNED)
{
    if (hasGun)
    {
        obj = instance_create(x+8, y+8, oShotgun);
        obj.yVel = rand(4,6);
        if (xVel &lt; 0) obj.xVel = -1 * rand(4,6);
        else obj.xVel = rand(4,6);
        obj.cost = 0;
        obj.forSale = false;
        hasGun = false;
    }

    scrCheckCollisions();
    
    if (xVel == 0 and yVel == 0 and hp &lt; 1) status = DEAD;
}

//if (isCollisionSolid()) y -= 2;

if (xVel &gt; 0) xVel -= 0.1;
if (xVel &lt; 0) xVel += 0.1;
if (abs(xVel) &lt; 0.5) xVel = 0;

if (status &lt; STUNNED and status != THROW)
{
    if (abs(xVel) &gt; 0) sprite_index = sShopRunLeft;
    else sprite_index = sShopLeft;
}
if (held)
{
        if (hp &gt; 0) sprite_index = sShopHeldL;
        else sprite_index = sShopDHeldL;
}
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
