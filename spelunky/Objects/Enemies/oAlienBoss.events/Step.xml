<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if (x &gt; view_xview[0]-36 and x &lt; view_xview[0] + view_wview[0] and
        y &gt; view_yview[0]-36 and y &lt; view_yview[0] + view_hview[0])
{
if (collision_point(x+8, y+8, oSolid, 0, 0))
{
    hp = 0;
}

if (hp &lt; 1 and status != DEAD)
{
    status = DEAD;
    sprite_index = sAlienBossDie;
    depth = 101;
    repeat(4)
    {
        n = rand(1,3);
        switch (n)
        {
            case 1: { gem = instance_create(x+16, y+16, oEmeraldBig); break; }
            case 2: { gem = instance_create(x+16, y+16, oSapphireBig); break; }
            case 3: { gem = instance_create(x+16, y+16, oRubyBig); break; }
        }
        gem.xVel = rand(0,3) - rand(0,3);
        gem.yVel = -2;
    }
    if (countsAsKill)
    {
        if (isRealLevel()) global.enemyKills[17] += 1;
        global.alienbosses += 1;
        global.kills += 1;
    }
}

if (sprite_index == sAlienBossDie)
{
    if (rand(1,2) == 1)
    {
        scrCreateBlood(x+8, y+rand(14,18), 1);
        blood = instance_create(x+8, y+rand(14,18), oBlood);
    }
}

yVel += myGrav;
if (yVel &gt; yVelLimit) yVel = yVelLimit;

if (xVel &gt; 0) xVel -= 0.1;
if (xVel &lt; 0) xVel += 0.1;
if (abs(xVel) &lt; 0.5) xVel = 0;

if (isCollisionBottom(1) and status != STUNNED)
    yVel = 0;

if (status == IDLE)
{
    xVel = 0;
}

moveTo(xVel,yVel);

if (isCollisionSolid())
    y -= 2;
    
dist = distance_to_object(oPlayer1);

if (psychicRecover &gt; 0) psychicRecover -= 1;
else if (dist &lt; 96 and status != DEAD and not oPlayer1.dead and not oPlayer1.stunned and oPlayer1.invincible == 0)
{
    for (i = 0; i &lt; 6; i += 1)
    {
        instance_create(x+16+rand(0,32)-rand(0,32), y+16+rand(0,32)-rand(0,32), oPsychicCreate);
    }
    instance_create(x+16, y+16, oPsychicWave);
    psychicRecover = 100;
    playSound(global.sndPsychic);
}

if (sprite_index != sAlienBossHurt) image_speed = 0.25;    
    
if (status != DEAD and sprite_index != sAlienBossHurt and facing == LEFT)
{
    sprite_index = sAlienBoss;
}
if (status != DEAD and sprite_index != sAlienBossHurt and facing == RIGHT)
{
    sprite_index = sAlienBoss;
}
}</argument>
      </arguments>
    </action>
  </actions>
</event>
