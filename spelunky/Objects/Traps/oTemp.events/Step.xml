<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if (fired == 0 and abs(oPlayer1.y-y-8) &lt; 8 and oPlayer1.x &lt; x+8 and
    point_distance(x+8, y+8, oPlayer1.x, oPlayer1.y) &lt; 128 and (abs(oPlayer1.xVel) &gt; 0 or abs(oPlayer1.yVel) &gt; 0))
{
    arrow = instance_create(x-16, y+4, oArrow);
    arrow.xVel = -8;
    fired += 1;
    sound_play(sndArrowTrap);
}

obj = instance_nearest(x, y, oEnemy);
if (obj) {
if (fired == 0 and abs(obj.y-y-8) &lt; 8 and obj.x &lt; x and
    point_distance(x, y, obj.x, obj.y) &lt; 128 and (abs(obj.xVel) &gt; 0 or abs(obj.yVel) &gt; 0))
{
    arrow = instance_create(x-16, y+4, oArrow);
    arrow.xVel = -8;
    fired += 1;
    sound_play(sndArrowTrap);
}}

obj = instance_nearest(x, y, oMoveableSolid);
if (obj) {
if (fired == 0 and abs(obj.y-y-8) &lt; 8 and obj.x &lt; x and
    point_distance(x, y, obj.x, obj.y) &lt; 128)
{
    arrow = instance_create(x-16, y+4, oArrow);
    arrow.xVel = -8;
    fired += 1;
    sound_play(sndArrowTrap);
}}

obj = instance_nearest(x-16, y, oItem);
if (obj) {
if (fired == 0 and abs(obj.y-y-8) &lt; 8 and obj.x &lt; x+8 and
    point_distance(x+8, y+8, obj.x, obj.y) &lt; 128 and (abs(obj.xVel) &gt; 0 or abs(obj.yVel) &gt; 0))
{
    arrow = instance_create(x-16, y+4, oArrow);
    arrow.xVel = -8;
    fired += 1;
    sound_play(sndArrowTrap);
}}</argument>
      </arguments>
    </action>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">x = ceil(x);
y = ceil(y);</argument>
      </arguments>
    </action>
  </actions>
</event>
