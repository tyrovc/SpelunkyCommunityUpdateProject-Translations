<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if (fired &gt; 0) fired -= 1;

range = 64;

if (fired == 0 and abs(oPlayer1.y-y-8) &lt; prox and oPlayer1.x &lt; x and
    point_distance(x+8, y+8, oPlayer1.x, oPlayer1.y) &lt; range)
{
    instance_create(x-16, y, oSpearsLeft);
    fired = firedMax;
}

obj = instance_nearest(x, y, oEnemy);
if (obj) {
if (fired == 0 and abs(obj.y-y) &lt; prox and obj.x &lt; x and
    point_distance(x, y, obj.x, obj.y) &lt; range)
{
    instance_create(x-16, y, oSpearsLeft);
    fired = firedMax;
}}

obj = instance_nearest(x, y, oMoveableSolid);
if (obj) {
if (fired == 0 and abs(obj.y-y) &lt; prox and obj.x &lt; x and
    point_distance(x, y, obj.x, obj.y) &lt; range)
{
    instance_create(x-16, y, oSpearsLeft);
    fired = firedMax;
}}

obj = instance_nearest(x, y, oItem);
if (obj) {
if (fired == 0 and abs(obj.y-y-8) &lt; prox and obj.x &lt; x+8 and
    point_distance(x+8, y+8, obj.x, obj.y) &lt; range)
{
    instance_create(x-16, y, oSpearsLeft);
    fired = firedMax;
}}

// right

if (fired == 0 and abs(oPlayer1.y-y-8) &lt; prox and oPlayer1.x &gt; x+8 and
    point_distance(x+8, y+8, oPlayer1.x, oPlayer1.y) &lt; range)
{
    spears = instance_create(x+16, y, oSpearsLeft);
    spears.sprite_index = sSpearsRight;
    fired = firedMax;
}

obj = instance_nearest(x, y, oEnemy);
if (obj) {
if (fired == 0 and abs(obj.y-y) &lt; prox and obj.x &gt; x and
    point_distance(x, y, obj.x, obj.y) &lt; range)
{
    spears = instance_create(x+16, y, oSpearsLeft);
    spears.sprite_index = sSpearsRight;
    fired = firedMax;
}}

obj = instance_nearest(x, y, oMoveableSolid);
if (obj) {
if (fired == 0 and abs(obj.y-y) &lt; prox and obj.x &gt; x and
    point_distance(x, y, obj.x, obj.y) &lt; range)
{
    spears = instance_create(x+16, y, oSpearsLeft);
    spears.sprite_index = sSpearsRight;
    fired = firedMax;
}}

obj = instance_nearest(x, y, oItem);
if (obj) {
if (fired == 0 and abs(obj.y-y-8) &lt; prox and obj.x &gt; x+8 and
    point_distance(x+8, y+8, obj.x, obj.y) &lt; range)
{
    spears = instance_create(x+16, y, oSpearsLeft);
    spears.sprite_index = sSpearsRight;
    fired = firedMax;
}}

if ((x &gt; view_xview[0]-8 and x &lt; view_xview[0] + view_wview[0]+8 and
        y &gt; view_yview[0]-8 and y &lt; view_yview[0] + view_hview[0]+8))
{
if (not collision_point(x, y+16, oSolid, 0, 0))
{
    instance_destroy();
}
}</argument>
      </arguments>
    </action>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">x = ceil(x);
y = ceil(y);</argument>
      </arguments>
    </action>
  </actions>
</event>
